{"version":3,"sources":["DBhandler.js","Helpers.js","index.js"],"names":["rjust","msg","n","rep","Array","from","Math","max","length","keys","map","idx","getId2","l","min","lib","round","random","d","Date","getSeconds","getMinutes","getHours","getDate","getMonth","num2test","num","floor","parseInt","getYear","toString","substring","CryptoJS","require","string2num","str","themes","arrows","darktheme","createMuiTheme","palette","type","typography","useNextVariants","lvls","ReplaceAll","search","replacement","newstr","split","val","getSpecialsLib","reversed","revlib","Object","key","Encrypt","data","encrypted","AES","encrypt","JSON","stringify","specials","Decrypt","parse","decrypt","enc","Utf8","PasswordContainer","props","state","pswd","autoComplete","onSubmit","e","preventDefault","TextField","id","label","value","this","onChange","setState","target","InputLabelProps","shrink","style","width","margin","inputRef","input","focus","Component","htmlToImage","App","showSettings","showInfobox","selected","selectedLine","connecting","inputColor","outputColor","lineWidth","points","theme","variant","background","arrow","lastPos","x","y","snackShow","snackMsg","snackColor","blue","doFocus","testmsg","showSaveBox","diagramRef","baseUrl","window","location","href","count","currentQuery","handleClick","bind","handleTouch","settingsBox","infoBox","handleAddPoint","saveBox","loadBox","p_key","outputs","o_key","dash","cb","opts","query","slice","decrypted","snackcolor","green","showLoadBox","encryptedQuery","newLib","rawquery","queries","q_str","p","q","output_str","output_q","let2pos","a","t","c","r","b","output","parseFromQuery","orange","axios","get","then","res","tmp","raw","err","console","log","newpoint","pos","shiftKey","p1","position","top","left","paddingLeft","opacity","Card","marginTop","maxHeight","overflow","CardContent","Typography","gutterBottom","component","color","paddingBottom","FormControl","InputLabel","htmlFor","Select","inputProps","name","themename","MenuItem","arrowname","variantname","Button","onClick","toPng","dataUrl","Image","src","link","document","createElement","download","click","paddingTop","testkey","newVal","toencrypt","newQuery","content","mod_id","url","sub","postToDB","newUrl","copy","indigo","history","pushState","arrowStart","arrowEnd","getDiagramRef","ref","avoidCollisions","height","connectionSize","onLineClick","key_a","key_b","point","snap","ceil","startPosition","onTouch","onDrag","display","verticalAlign","textAlign","paddingRight","bottom","right","padding","Fab","lightBlue","zIndex","boxShadow","password","deepPurple","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","open","SnackbarContent","message","backgroundColor","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4a3516eb.chunk.js","sourcesContent":["//var GoogleSpreadsheet = require('google-spreadsheet');\n//var request = require('request');\nimport axios from 'axios'\n\nfunction ReplaceAll(str, search, replacement) {\n  var msg = ''\n  str.split(search).map(sub => {\n    msg += sub + replacement\n  })\n  return msg.substring(0, msg.length - replacement.length)\n}\n\nfunction num2string(num) {\n  return num.toString(36)\n}\n\n//AIzaSyC2xSmTdMOwyfYJNWgRI0AZolpKgPft8a0\nfunction string2num(str) {\n  return parseInt(str, 36)\n}\n\nfunction rjust(msg, n, rep) {\n  msg = '' + msg\n  Array.from(Array(Math.max(0, n - msg.length)).keys()).map(idx => {\n    msg = rep + msg\n  })\n  return msg\n}\n\nfunction num2test(num, lib) {\n  if (!lib) {\n    lib = '0123456789'\n    lib += 'abcdefghijklmnopqrstuvwxyz'\n    lib += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  }\n  if (num < lib.length) {\n    return lib[num]\n  } else {\n    return num2test(Math.floor(num / lib.length)) + lib[num % lib.length]\n  }\n}\n\nfunction getId2(l) {\n  l = Math.min(20, Math.max(10, l || 15))\n  var lib = '0123456789'\n  lib += 'abcdefghijklmnopqrstuvwxyz'\n  lib += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  var msg = ''\n  msg += Math.round(Math.random() * 100)\n  var d = new Date()\n  msg += rjust(d.getSeconds(), 2, 0)\n  msg += rjust(d.getMinutes(), 2, 0)\n  msg += rjust(d.getHours(), 2, 0)\n  msg += rjust(d.getDate(), 2, 0)\n  msg += rjust(d.getMonth(), 2, 0)\n  msg += rjust(parseInt(d.getYear().toString().substring(1)), 2, 0)\n  msg = num2test(msg, lib)\n  Array.from(Array(l - msg.length).keys()).map(idx => {\n    msg = lib[Math.round(Math.random() * (lib.length - 1))] + msg\n  })\n  return msg\n}\n\nfunction getId(l) {\n  l = Math.min(20, Math.max(10, l || 15))\n  var msg = ''\n  const lib = 'abcdefghijklmnopqrstuvwxyz0123456789'\n  var d = new Date();\n  msg += num2string(parseInt(d.getYear().toString().substring(1)))\n  msg += num2string(d.getMonth() * 30 + d.getDate())\n  msg += num2string(d.getHours())\n  msg += num2string(d.getMinutes())\n  msg += num2string(d.getSeconds())\n  Array.from(Array(l - msg.length).keys()).map(idx => {\n    msg += lib[Math.floor(Math.random() * lib.length)];\n  })\n  return msg\n}\n\n// https://docs.google.com/forms/d/e/1FAIpQLSengBsi9gQZ0Od0xvUK8hrUXtlzYxJMeTgeepRCK_OPpfaelw/viewform?usp=pp_url&entry.32769032=kakesmak&entry.1926665398=fiskeost\n\nexport function postToDB(content, cb) {\n  const mod_id = getId2();\n  var url = 'https://docs.google.com/forms/d/e/1FAIpQLSengBsi9gQZ0Od0xvUK8hrUXtlzYxJMeTgeepRCK_OPpfaelw/formResponse?usp=pp_url'\n  url += '&entry.32769032=' + mod_id;\n  url += '&entry.1926665398=' + ReplaceAll(content, ' ', '+');\n  url += '&submit=Submit'\n  console.log(url)\n  axios.get(url).then(res => {})\n  cb(mod_id)\n}\n\n//https://docs.google.com/forms/d/e/1FAIpQLSfrs2Vx7yfwja-re-XXH_rJZphh--8wXZhYZthpefKGcj6KKQ/viewform?usp=sf_link\n//https://docs.google.com/spreadsheets/d/1qNBuXr5KIHPHqoNBgZEao2F3rAjBtMiQf6fsEDug0mk/edit?usp=sharing\n\n//https://docs.google.com/spreadsheets/d/1qNBuXr5KIHPHqoNBgZEao2F3rAjBtMiQf6fsEDug0mk/edit?usp=sharing\n\n//https://spreadsheets.google.com/feeds/cells/1qNBuXr5KIHPHqoNBgZEao2F3rAjBtMiQf6fsEDug0mk/1/public/full?alt=json\n//https://spreadsheets.google.com/feeds/list/1qNBuXr5KIHPHqoNBgZEao2F3rAjBtMiQf6fsEDug0mk/od6/public/values?alt=json-in-script&callback=\n\n//https://docs.google.com/spreadsheets/d/1qNBuXr5KIHPHqoNBgZEao2F3rAjBtMiQf6fsEDug0mk/export?format=csv&id=1qNBuXr5KIHPHqoNBgZEao2F3rAjBtMiQf6fsEDug0mk&gid=0'\n\nexport function getDB(cb) {\n  var res;\n  axios.get('https://docs.google.com/spreadsheets/d/1qNBuXr5KIHPHqoNBgZEao2F3rAjBtMiQf6fsEDug0mk/export?format=csv&id=1qNBuXr5KIHPHqoNBgZEao2F3rAjBtMiQf6fsEDug0mk&gid=0').then(res => {\n    var data = {};\n    var raw = res.data.split('\\r\\n');\n    var tmp;\n    for (var idx = 1; idx < raw.length; idx++) {\n      tmp = raw[idx].split(',')\n      data[tmp[0]] = tmp[1]\n    }\n    cb(data)\n  })\n}\n\n// gammel db:\n// https://spreadsheets.google.com/feeds/list/1QwQIRXrPbanZr6cUw7u6d5sk3yiBuPiyup4JLpyBuuE/od6/public/basic?alt=json\n/*export function getDB(cb) {\n  var res;\n  axios.get('https://spreadsheets.google.com/feeds/list/1qNBuXr5KIHPHqoNBgZEao2F3rAjBtMiQf6fsEDug0mk/od6/public/basic?alt=json').then(res => {\n    console.log(res)\n    var lib = {}\n    res.data.feed.entry.map(entry => {\n      lib[entry.title['$t']] = entry.content['$t'].split('content: ')[1]\n    })\n    cb(lib)\n  })\n}*/\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\n\nvar CryptoJS = require(\"crypto-js\");\n\nexport function num2string(num) {\n  return num.toString(36)\n}\n\nexport function string2num(str) {\n  return parseInt(str, 36)\n}\n\nexport const themes = [\n  'red',\n  'pink',,\n  'purple',\n  'deep-purple',\n  'indigo',\n  'blue',\n  'light-blue',\n  'green',\n  'light-green',\n  'lime',\n  'yellow',\n  'amber',\n  'orange',\n  'deep-orange',\n  'brown',\n  'grey',\n  'blue-grey',\n  'black',\n  'white'\n]\n\nexport const arrows = [\n  'none',\n  'start',\n  'end',\n  'both'\n]\n\nexport const darktheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n  typography: { useNextVariants: true },\n});\n\nconst lvls = {\n  0:'IIA',\n  1:'IIB',\n  2:'IIC',\n  3:'IID'\n}\n\n// Parse from current state to query\nexport function parseToQuery(tmp_theme, tmp_variant, lineWidth, count, points) {\n  var msg = '' + num2string(themes.indexOf(tmp_theme)) + lvls[0] + tmp_variant\n  msg += lvls[0] + num2string(lineWidth) + lvls[0] + num2string(count)\n  Object.keys(points).map(key => {\n    const p = points[key]\n    msg += lvls[0] + key\n    msg += lvls[1] + p.msg\n    msg += lvls[1] + num2string(Math.round( p.pos.x / 10 ))\n    msg += lvls[1] + num2string(Math.round( p.pos.y / 10 ))\n    msg += lvls[1]\n    Object.keys(p.outputs).map(out_key => {\n      msg += out_key\n      msg += lvls[3] + p.outputs[out_key].output[0]\n      msg += p.outputs[out_key].input[0]\n      msg += lvls[2]\n    })\n    if (Object.keys(p.outputs).length !== 0) {\n      msg = msg.substring(0, msg.length - 1)\n    }\n  })\n  return msg\n}\n\n\n// Parse query and return state variables\nexport function parseFromQuery(rawquery) {\n  var newLib = { points:{} }\n  var queries = rawquery.split(lvls[0])\n  newLib['theme'] = (queries[0] === 'R' ? null : themes[string2num(queries[0])])\n  newLib['variant'] = queries[1]\n  newLib['lineWidth'] = string2num(queries[2])\n  newLib['count'] = string2num(queries[3])\n  queries.slice(4).map(q_str => {\n    var p = {}\n    var q = q_str.split(lvls[1])\n    p['msg'] = q[1]\n    p['pos'] = { x:string2num(q[2])*10, y:string2num(q[3])*10 }\n    p['outputs'] = {}\n    q[4].split(lvls[2]).map(output_str => {\n      const output_q = output_str.split(lvls[3])\n      if (output_q.length === 2) {\n        const let2pos = {\n          a: 'auto',\n          t: 'top',\n          l: 'left',\n          c: 'center',\n          r: 'right',\n          b: 'bottom'\n        }\n        p.outputs[output_q[0]] = {\n          output: let2pos[output_q[1][0]],\n          input: let2pos[output_q[1][1]]\n        }\n      }\n    })\n    newLib.points['' + q[0]] = p\n  })\n  return newLib\n}\n\nexport function ReplaceAll(str, search, replacement) {\n  var newstr = ''\n  str.split(search).map(val => {newstr += val + replacement})\n  return newstr.substring(0, newstr.length - replacement.length)\n}\n\nexport function getSpecialsLib(reversed) {\n  var lib = {\n    '§': '%C2%A7',\n    '\"': '%22',\n    '#': '%23',\n    '%': '%25',\n    '&': '%26',\n    '=': '%3D',\n    '`': '%60',\n    '^': '%5E',\n    '+': '%2B',\n    '´': '%C2%B4',\n    '¨': '%C2%A8'\n  }\n  if (reversed) {\n    var revlib = {}\n    Object.keys(lib).map(key => {\n      revlib[lib[key]] = key\n    })\n    return revlib\n  }\n  return lib\n}\n\nexport function Encrypt(data, key) {\n  var encrypted = CryptoJS.AES.encrypt(JSON.stringify(data), key).toString()\n  const specials = getSpecialsLib()\n  Object.keys(specials).map(key => {\n    encrypted = ReplaceAll(encrypted, key, specials[key])\n  })\n  return encrypted\n}\n\nexport function Decrypt(data, key) {\n  var msg = data\n  const specials = getSpecialsLib(true)\n  Object.keys(specials).map(key => {\n    msg = ReplaceAll(msg, key, specials[key])\n  })\n  return JSON.parse(CryptoJS.AES.decrypt(msg, key).toString(CryptoJS.enc.Utf8))\n}\n\n\nexport class PasswordContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pswd: ''\n    }\n  }\n  render() {\n    return (\n      <form autoComplete='off' onSubmit={(e) => {e.preventDefault(); if (this.props.onSubmit) {this.props.onSubmit(this.state.pswd)}}}>\n        <TextField\n          id=\"pswdfield\"\n          label=\"Password\"\n          value={this.state.pswd}\n          onChange={(e) => {this.setState({pswd:e.target.value})}}\n          type=\"text\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          style={{width:'100%'}}\n          margin=\"normal\"\n          inputRef={(input) => {if (input) {input.focus()}}}/>\n      </form>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css';\n\nimport { postToDB, getDB } from './DBhandler.js';\nimport {\n  themes,\n  darktheme,\n  arrows,\n  parseFromQuery,\n  PasswordContainer,\n  ReplaceAll,\n  Encrypt,\n  Decrypt\n} from './Helpers.js';\n\nimport copy from 'copy-to-clipboard';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport LinkIcon from '@material-ui/icons/Link';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HelpIcon from '@material-ui/icons/Help';\n\nimport green from '@material-ui/core/colors/green';\nimport orange from '@material-ui/core/colors/orange';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\n\nimport { Flowspace, Flowpoint } from 'flowpoints';\n\n\nvar htmlToImage = require('html-to-image');\n\n\n// Main example\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSettings: true,\n      showInfobox: false,\n      selected: null,\n      selectedLine: null,\n      connecting: null,\n      inputColor: '#00fff2',\n      outputColor: '#0c00ff',\n      lineWidth: 4,\n      points: {},\n      theme: 'indigo',\n      variant: 'outlined',\n      background: 'white',\n      arrow: 'none',\n      lastPos: {x:300, y:50},\n      snackShow: false,\n      snackMsg: '',\n      snackColor: blue[500],\n      doFocus: false,\n      testmsg: 'thisisatesttoverifydecryption',\n      showSaveBox: false\n    }\n\n    // Helper variables\n    this.diagramRef = null;\n    this.baseUrl = window.location.href.split('/?p=')[0]\n    if (this.baseUrl[this.baseUrl.length - 1] !== '/') this.baseUrl += '/'\n    this.count = Object.keys(this.state.points).length\n    this.currentQuery = ''\n\n    // Binding class methods\n    this.handleClick = this.handleClick.bind(this)\n    this.handleTouch = this.handleTouch.bind(this)\n    this.settingsBox = this.settingsBox.bind(this)\n    this.infoBox = this.infoBox.bind(this)\n    this.handleAddPoint = this.handleAddPoint.bind(this)\n    this.saveBox = this.saveBox.bind(this);\n    this.loadBox = this.loadBox.bind(this);\n\n    // Adding dash\n    Object.keys(this.state.points).map(p_key => {\n      Object.keys(this.state.points[p_key].outputs).map(o_key => {\n        if (!(\"dash\" in this.state.points[p_key].outputs[o_key])) {\n          this.state.points[p_key].outputs[o_key].dash = 0\n        }\n      })\n    })\n  }\n\n\n  componentDidMount() {\n    //window.onbeforeunload = () => {\n    //  if (this.count > 0) return 'Any unsaved data will be lost';\n    //}\n    const opts = [\n      'red',\n      'pink',,\n      'purple',\n      'deep-purple',\n      'indigo',\n      'blue',\n      'light-blue',\n      'green',\n      'light-green',\n      'lime',\n      'yellow',\n      'amber',\n      'orange',\n      'deep-orange',\n    ]\n    /*this.setState({\n      theme:opts[Math.round(Math.random() * opts.length)],\n      variant:(Math.random() < 0.5 ? 'outlined' : 'filled')\n    })*/\n    var query = window.location.href.split(this.baseUrl)[1].substring(3)\n    if (query) {\n      try {\n        query = query.slice(0, 15)\n        getDB(data => {\n          if (query in data) {\n            // Choosing parser and parsing\n            if (data[query].substring(0, 6) === 'prsr02') {\n              // Encrypted using default password\n              var decrypted = Decrypt(data[query].substring(6), 'Hello world!');\n              this.count = Object.keys(decrypted.points).length + 1;\n              this.setState(decrypted)\n              this.setState({\n                snackShow: true,\n                snackMsg: 'Loaded model from URL',\n                snackcolor: green['A700']\n              })\n            } else if (data[query].substring(0, 6) === 'prsr03') {\n              // Encrypted using user defined password\n              this.setState({\n                showLoadBox: true,\n                encryptedQuery: data[query].substring(6)\n              })\n            } else {\n              // Legacy parser\n              query = ReplaceAll(query, 'lll', '.')\n              var newLib = parseFromQuery(data[query])\n              this.count = newLib.count\n              Object.keys(newLib.points).map(p_key => {\n                Object.keys(newLib.points[p_key].outputs).map(o_key => {\n                  if (!(\"dash\" in newLib.points[p_key].outputs[o_key])) {\n                    newLib.points[p_key].outputs[o_key].dash = 0\n                  }\n                })\n              })\n              this.setState({\n                theme: (newLib.theme === null ? opts[Math.round(Math.random() * opts.length)] : newLib.theme),\n                variant: newLib.variant,\n                lineWidth: newLib.lineWidth,\n                points: newLib.points,\n                snackShow: true,\n                snackMsg: 'Loaded model from URL',\n                snackcolor: green['A700']\n              })\n            }\n          } else {\n            this.setState({\n              snackShow: true,\n              snackMsg: 'Failed to load model from URL',\n              snackcolor: orange['A400']\n            })\n          }\n        })\n      } catch(err) {\n        console.log('Failed to rebuild from query', err)\n        this.setState({\n          snackShow: true,\n          snackMsg: 'Failed to load model from URL',\n          snackcolor: orange['A400']\n        })\n      }\n    }\n  }\n\n\n  handleAddPoint() {\n    var newpoint = {\n      msg: '',\n      pos: {x:this.state.lastPos.x, y:this.state.lastPos.y + 100},\n      outputs: {},\n    }\n    var points = this.state.points\n    points['' + this.count] = newpoint\n    this.count += 1\n    this.setState({points, selected:''+(this.count - 1), lastPos:{x:this.state.lastPos.x, y:this.state.lastPos.y + 100}})\n  }\n\n\n  handleClick(id, e) {\n    this.doFocus = true;\n    var selected = this.state.selected\n    var points = this.state.points\n    if (e.shiftKey) {\n      if (selected === null) {\n        selected = id\n      } else {\n        if (selected !== id) {\n          var p1 = points[selected]\n          if (id in p1.outputs) {\n            delete p1.outputs[id]\n          } else {\n            p1.outputs[id] = {\n              output:'auto',\n              input:'auto',\n              dash: 0\n            }\n          }\n        }\n      }\n    } else {\n      selected = (selected === null ? id : (selected === id ? null : id))\n    }\n    this.setState({selected, points})\n  }\n\n\n  handleTouch(id) {\n    this.doFocus = false;\n    var selected = this.state.selected\n    var points = this.state.points\n    if (selected === null) {\n      selected = id\n    } else {\n      if (selected !== id) {\n        var p1 = points[selected]\n        if (id in p1.outputs) {\n          delete p1.outputs[id]\n        } else {\n          p1.outputs[id] = {\n            output:'auto',\n            input:'auto',\n            dash: 0\n          }\n        }\n      }\n    }\n    this.setState({selected, points})\n  }\n\n\n  infoBox() {\n    return (\n      <div style={{position:'fixed', top:0, left:0, width:350, paddingLeft:10, opacity:0.8}}>\n\n        <Card style={{marginTop:10, maxHeight:'70vh', overflow:'scroll'}}>\n          <CardContent>\n\n            <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{opacity:1}}>\n              Flowpoints!\n            </Typography>\n\n            <Typography component=\"p\">\n              A developer-friendly library for creating flowcharts and diagrams.\n              <br/><br/>\n              This is a demo for the React JS package found <a style={{color:'#29F9FF'}} href=\"https://www.npmjs.com/package/flowpoints\">here</a>\n              <br/><br/>\n              Here's some hints to get you started!\n              <br/><br/>\n              <b>Creating new flowpoints:</b><br/>\n              You can create new nodes with the blue plus button in the lower right corner.\n              New nodes will appear just beneath whichever node was created or moved last.\n              <br/><br/>\n              <b>Adding connections:</b><br/>\n              Start by selecting a node. It´s color should change to indicate that it´s been selected.\n              Next hold shift while clicking another node to connect the two. Keep holding shift and clicking other nodes to connect to those as well.\n              <br/><br/>\n              <b>Removing connections:</b><br/>\n              Just repeat the steps from the \"adding connections\" section to delete that connection between two nodes.\n              <br/><br/>\n              <b>Changing styles:</b><br/>\n              Click the settings button in the lower right corner (this info box will disappear!).\n              In the menu that shows up you'll be able to change the appearance of your flowchart. Everything in this menu should be fairly self-explanatory :)\n              <br/><br/>\n              <b>Sharing your work:</b><br/>\n              You can share your current diagrams by clicking the link-button in the lower right corner.\n              When clicking this a link will be copied to your clipboard.\n              <br/><br/>\n              <b>!!!</b>\n              <br/>\n              Please note that when you create links like this a string representation of your diagram will be stored in a <b>publicly viewable</b> Google Sheet.\n              As this demo is hosted using GitHub pages I don´t have an actual server to store user data on.\n            </Typography>\n\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n\n  settingsBox() {\n    return (\n      <div style={{position:'fixed', top:0, left:0, width:250, paddingLeft:10, opacity:0.8}}>\n\n        {\n          this.state.showSettings\n          ? <Card style={{marginTop:10}}>\n            <CardContent>\n\n              <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{opacity:1}}>\n                Settings\n              </Typography>\n\n              <div style={{paddingBottom:10}}>\n                <FormControl style={{width:'100%'}}>\n                  <InputLabel htmlFor='backselect'>Background</InputLabel>\n                  <Select\n                    value={this.state.background}\n                    inputProps={{ name:'back select', id:'backselect'}}\n                    onChange={(e) => {\n                      this.setState({background:e.target.value})\n                    }}>\n                    {\n                      themes.map(themename => {\n                        return (\n                          <MenuItem value={themename}>{themename}</MenuItem>\n                        )\n                      })\n                    }\n                  </Select>\n                </FormControl>\n              </div>\n\n              <div style={{paddingBottom:10}}>\n                <FormControl style={{width:'100%'}}>\n                  <InputLabel htmlFor='themeselect'>Theme</InputLabel>\n                  <Select\n                    value={this.state.theme}\n                    inputProps={{ name:'theme select', id:'themeselect'}}\n                    onChange={(e) => {\n                      this.setState({theme:e.target.value})\n                    }}>\n                    {\n                      themes.map(themename => {\n                        return (\n                          <MenuItem value={themename}>{themename}</MenuItem>\n                        )\n                      })\n                    }\n                  </Select>\n                </FormControl>\n              </div>\n\n              <div style={{paddingBottom:10}}>\n                <FormControl style={{width:'100%'}}>\n                  <InputLabel htmlFor='arrowselect'>Arrows</InputLabel>\n                  <Select\n                    value={this.state.arrow}\n                    inputProps={{ name:'arrow select', id:'arrowselect'}}\n                    onChange={(e) => {\n                      this.setState({arrow:e.target.value})\n                    }}>\n                    {\n                      arrows.map(arrowname => {\n                        return (\n                          <MenuItem value={arrowname}>{arrowname}</MenuItem>\n                        )\n                      })\n                    }\n                  </Select>\n                </FormControl>\n              </div>\n\n              <div>\n                <FormControl style={{width:'100%'}}>\n                  <InputLabel htmlFor='variantselect'>Variant</InputLabel>\n                  <Select\n                    value={this.state.variant}\n                    inputProps={{ name:'variant select', id:'variantselect'}}\n                    onChange={(e) => {\n                      this.setState({variant:e.target.value})\n                    }}>\n                    {\n                      ['paper','outlined','filled'].map(variantname => {\n                        return (\n                          <MenuItem value={variantname}>{variantname}</MenuItem>\n                        )\n                      })\n                    }\n                  </Select>\n                </FormControl>\n              </div>\n\n              <form onSubmit={(e) => {e.preventDefault()}}>\n                <TextField\n                  id=\"linewidthfield\"\n                  label=\"Line width\"\n                  value={this.state.lineWidth}\n                  onChange={(e) => {this.setState({lineWidth:e.target.value})}}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  style={{width:'100%'}}\n                  margin=\"normal\"/>\n              </form>\n\n              <Button\n                variant=\"outlined\"\n                onClick={() => {\n                  htmlToImage.toPng(this.diagramRef).then(function (dataUrl) {\n                    var img = new Image();\n                    img.src = dataUrl;\n                    var link = document.createElement('a');\n                    link.download = 'diagram.png';\n                    link.href = dataUrl;\n                    link.click();\n                  })\n                }}>\n                Export PNG\n              </Button>\n\n            </CardContent>\n          </Card> : null\n        }\n\n        {\n          this.state.selected !== null && this.state.selected in this.state.points\n            ? <Card style={{marginTop:10}}>\n              <CardContent style={{paddingTop:0, paddingBottom:15}}>\n\n                <form onSubmit={(e) => {\n                  e.preventDefault()\n                  this.handleAddPoint()\n                  }}>\n                  <TextField\n                    id=\"msgfield\"\n                    label=\"Message\"\n                    autoComplete=\"off\"\n                    inputRef={(input) => {if (this.doFocus && input) input.focus()}}\n                    value={this.state.points[this.state.selected].msg}\n                    onChange={(e) => {\n                      var points = this.state.points\n                      var point = points[this.state.selected]\n                      point.msg = e.target.value\n                      this.setState({points: points})\n                    }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    style={{width:'100%'}}\n                      margin=\"normal\"/>\n                </form>\n\n                <Button\n                  variant=\"outlined\"\n                  onClick={() => {\n                    var selected = this.state.selected;\n                    var points = {}\n                    Object.keys(this.state.points).map(testkey => {\n                      if (testkey !== selected) points[testkey] = this.state.points[testkey]\n                    })\n                    if (Object.keys(points).length === 0) this.count = 0\n                    this.setState({selected:null, points})\n                  }}>\n                  Delete\n                </Button>\n\n              </CardContent>\n            </Card> : null\n        }\n\n        {\n          this.state.selectedLine\n          ? <Card style={{marginTop:10}}>\n            <CardContent style={{paddingTop:0, paddingBottom:15}}>\n\n              <form onSubmit={(e) => {e.preventDefault()}}>\n                <TextField\n                  label=\"Dash length\"\n                  type=\"number\"\n                  autoComplete=\"off\"\n                  value={this.state.points[this.state.selectedLine.a].outputs[this.state.selectedLine.b].dash}\n                  onChange={(e) => {\n                    var points = this.state.points\n                    var newVal = e.target.value\n                    if (newVal > 0) {\n                      newVal = Math.round(newVal)\n                    } else {\n                      newVal = null\n                    }\n                    points[this.state.selectedLine.a].outputs[this.state.selectedLine.b].dash = newVal\n                    this.setState({points: points})\n                  }}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  style={{width:'100%'}}\n                    margin=\"normal\"/>\n              </form>\n\n            </CardContent>\n          </Card> : null\n        }\n\n      </div>\n    )\n  }\n\n\n  saveBox() {\n    return (\n      <div style={{position:'fixed', top:0, left:260, width:250, paddingLeft:10, opacity:0.9}}>\n        <Card style={{marginTop:10}}>\n          <CardContent>\n\n            <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{opacity:1}}>\n              Password (optional)\n            </Typography>\n\n            <Typography component=\"p\">\n              Hit enter to skip.\n              <br/>\n              <br/>\n              Create a password to encrypt your document, or leave this field blank to get a publicly available link.\n              <br/>\n              <br/>\n              Note that if you forget this key the document cannot be recovered.\n              <br/>\n            </Typography>\n\n            <div style={{paddingBottom:10}}>\n              <PasswordContainer\n                onSubmit={pswd => {\n                  var toencrypt = this.state;\n                  toencrypt['showSaveBox'] = false;\n                  toencrypt['showLoadBox'] = false;\n                  var newQuery = 'prsr'\n                  if (pswd === '') {\n                    newQuery += '02' + Encrypt(toencrypt, 'Hello world!')\n                  } else {\n                    newQuery += '03' + Encrypt(toencrypt, pswd)\n                  }\n                  postToDB(newQuery, (mod_id) => {\n                    var newUrl = this.baseUrl + '?p=' + mod_id;\n                    copy(newUrl)\n                    this.setState({\n                      snackShow: true,\n                      snackMsg: 'Copied link to clipboard',\n                      snackcolor: indigo['A400']\n                    })\n                    window.history.pushState({}, mod_id, newUrl);\n                  })\n                }}/>\n            </div>\n\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                this.setState({showSaveBox: false})\n              }}>\n              Cancel\n            </Button>\n\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n\n\n  loadBox() {\n    return (\n      <div style={{position:'fixed', top:0, left:260, width:250, paddingLeft:10, opacity:0.9}}>\n        <Card style={{marginTop:10}}>\n          <CardContent>\n\n            <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{opacity:1}}>\n              Password\n            </Typography>\n\n            <Typography component=\"p\">\n              The document is encrypted.\n              <br/>\n              <br/>\n              Please type your key in order to decrypt it.\n              <br/>\n            </Typography>\n\n            <div style={{paddingBottom:10}}>\n              <PasswordContainer\n                onSubmit={pswd => {\n                  var decrypted = Decrypt(this.state.encryptedQuery, pswd);\n                  if (decrypted.testmsg) {\n                    if (decrypted.testmsg === 'thisisatesttoverifydecryption') {\n                      this.count = Object.keys(decrypted.points).length + 1;\n                      this.setState(decrypted)\n                      this.setState({\n                        snackShow: true,\n                        showLoadBox: false,\n                        snackMsg: 'Loaded model from URL',\n                        snackcolor: green['A700']\n                      })\n                      return\n                    }\n                  }\n                  this.setState({\n                    snackShow: true,\n                    snackMsg: 'Failed to decrypt data',\n                    snackcolor: orange['A400']\n                  })\n                }}/>\n            </div>\n\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                this.setState({showLoadBox: false})\n              }}>\n              Cancel\n            </Button>\n\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n\n  render() {\n    return (\n      <MuiThemeProvider theme={darktheme}>\n\n        <div>\n          <Flowspace\n            theme={this.state.theme}\n            variant={this.state.variant}\n            background={this.state.background}\n            arrowStart={this.state.arrow === 'start' || this.state.arrow === 'both'}\n            arrowEnd={this.state.arrow === 'end' || this.state.arrow === 'both'}\n            getDiagramRef={ref => {this.diagramRef = ref}}\n            avoidCollisions\n            style={{height:'100vh', width:'100vw'}}\n            connectionSize={this.state.lineWidth}\n            selected={this.state.selected}\n            selectedLine={this.state.selectedLine}\n            onClick={() => {this.setState({ selected:null, selectedLine:null })}}\n            onLineClick={(key_a, key_b) => {this.setState({ selectedLine:{a:key_a, b:key_b} })}}>\n\n            {\n              Object.keys(this.state.points).map(key => {\n                var point = this.state.points[key]\n\n                return (\n\n                  <Flowpoint\n                    key={key}\n                    snap={{x:10, y:10}}\n                    style={{height:Math.max(50, Math.ceil(point.msg.length / 20) * 30)}}\n                    startPosition={point.pos}\n                    outputs={point.outputs}\n                    onClick={e => {this.handleClick(key, e)}}\n                    onTouch={e => {this.handleTouch(key)}}\n                    onDrag={pos => {\n                      var points = this.state.points;\n                      points[key].pos = pos;\n                      this.setState({points, lastPos:pos})\n                    }}>\n                    <div style={{display:'table', width:'100%', height:'100%'}}>\n                      <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center', paddingLeft:2, paddingRight:2}}>\n                        {\n                          point.msg !== '' ? point.msg : 'Empty'\n                        }\n                      </div>\n                    </div>\n                  </Flowpoint>\n\n                )\n\n              })\n            }\n\n          </Flowspace>\n        </div>\n\n        {\n          this.state.showInfobox ? this.infoBox() : this.settingsBox()\n        }\n\n        <div style={{position:'fixed', bottom:0, right:0, padding:3}}>\n          <div style={{paddingBottom:3}}>\n            <Fab\n              style={{background:lightBlue['A400'], color:'#ffffff', zIndex:6, boxShadow:'none'}}\n              onClick={() => {this.handleAddPoint()}}>\n              <AddIcon />\n            </Fab>\n          </div>\n          <div style={{paddingBottom:3}}>\n            <Fab\n              style={{background:indigo['A400'], color:'#ffffff', zIndex:6, boxShadow:'none'}}\n              onClick={() => {\n                //var newQuery = parseToQuery(this.state.theme, this.state.variant, this.state.lineWidth, this.count, this.state.points);\n                //newQuery = ReplaceAll(newQuery, '.', 'lll')\n                this.setState({showSaveBox: true, password: ''})\n              }}>\n              <LinkIcon />\n            </Fab>\n          </div>\n          <div style={{paddingBottom:3}}>\n            <Fab\n              style={{background:deepPurple['A400'], color:'#ffffff', zIndex:6, boxShadow:'none'}}\n              onClick={() => { this.setState({showSettings:(this.state.showInfobox ? true : !this.state.showSettings), showInfobox:false}) }}>\n              <SettingsIcon />\n            </Fab>\n          </div>\n          <div>\n            <Fab\n              style={{background:orange['A700'], color:'#ffffff', zIndex:6, boxShadow:'none'}}\n              onClick={() => { this.setState({showInfobox:!this.state.showInfobox}) }}>\n              <HelpIcon />\n            </Fab>\n          </div>\n        </div>\n\n        <Snackbar\n          autoHideDuration={3000}\n          onClose={() => { this.setState({snackShow:false}) }}\n          anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n          open={this.state.snackShow}>\n          <SnackbarContent\n            message={this.state.snackMsg}\n            style={{backgroundColor:this.state.snackcolor, color:'black'}}/>\n        </Snackbar>\n\n        {\n          this.state.showSaveBox ? this.saveBox() : null\n        }\n\n        {\n          this.state.showLoadBox ? this.loadBox() : null\n        }\n\n      </MuiThemeProvider>\n    );\n  }\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}